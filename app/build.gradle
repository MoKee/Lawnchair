import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'


def getChangelog = { ->
    def commitRange = System.getenv("TRAVIS_COMMIT_RANGE")
    if (commitRange) {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'log', '--format=%s', commitRange
            standardOutput = stdout
        }
        return stdout.toString().trim().replace("\n", "\\n").replace("\"", "\\\"")
    } else {
        return null
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    signingConfigs {
        travis {
            storeFile file("debug.jks")
            storePassword System.getenv("STORE_PASSWORD")
            keyAlias "Lawnchair"
            keyPassword System.getenv("KEY_PASSWORD")
        }
        mokee {
            storeFile file(CERT_STORE_PATH)
            storePassword CERT_STORE_PASSWORD
            keyAlias "mokee.keystore"
            keyPassword CERT_KEY_PASSWORD
        }
    }
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 26
        applicationId "org.mokee.lawnchair"
        buildConfigField "boolean", "TRAVIS", System.getenv("TRAVIS") ?: "false"
        buildConfigField "boolean", "TAGGED_BUILD", System.getenv("TRAVIS_TAG") ? "true" : "false"
        buildConfigField "int", "TRAVIS_BUILD_NUMBER", System.getenv("TRAVIS_BUILD_NUMBER") ?: "0"
        buildConfigField "String", "CHANGELOG", "\"${getChangelog()}\""
        buildConfigField "String", "MOBILE_CENTER_KEY", "\"" + System.getenv("MOBILE_CENTER_KEY") + "\""
        buildConfigField "String", "OPENWEATHERMAP_KEY", "\"" + OPENWEATHERMAP_KEY + "\""
        if (System.getenv("TRAVIS") == "true") {
            versionCode = Integer.valueOf(System.getenv("TRAVIS_BUILD_NUMBER"))
            versionName = "Travis-" + System.getenv("TRAVIS_BUILD_NUMBER")
        } else {
            long timestamp = System.currentTimeMillis() / 1000
            versionCode Integer.valueOf(timestamp.toString())
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm")
            Date date = new Date(System.currentTimeMillis());
            versionName simpleDateFormat.format(date)
        }
        signingConfig signingConfigs.mokee
    }
    buildTypes {
        debug {
            if (System.getenv("TRAVIS") == "true") {
                minifyEnabled false //true
                //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                if (System.getenv("TRAVIS_EVENT_TYPE") != "pull_request") {
                    signingConfig signingConfigs.travis
                }
            } else {
                minifyEnabled false
            }
        }
        release {
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Lawnchair.apk"
                }
            }
        }
    }
    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    def mobileCenterSdkVersion = '0.10.0'
    def supportLibVersion = '26.0.0'
    implementation "com.microsoft.azure.mobile:mobile-center-analytics:${mobileCenterSdkVersion}"
    implementation "com.microsoft.azure.mobile:mobile-center-crashes:${mobileCenterSdkVersion}"
    implementation "com.microsoft.azure.mobile:mobile-center-distribute:${mobileCenterSdkVersion}"
    implementation "com.android.support:support-v4:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation "com.android.support:palette-v7:${supportLibVersion}"
    implementation "com.android.support:cardview-v7:${supportLibVersion}"
    compile 'com.github.KwabenBerko:OpenWeatherMap-Android-Library:v1.0.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
}
repositories {
    mavenCentral()
}


